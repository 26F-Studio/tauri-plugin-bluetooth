name: Main

on:
  push:
    branches: [ ci*, main ]
    tags: [ pre*, v* ]
  pull_request:
    branches: [ main ]

env:
  BUILD_TYPE: ${{ startsWith(github.ref, 'refs/tags/v') && 'release' || 'dev' }}

jobs:
  get-info:
    runs-on: ubuntu-latest
    outputs:
      commit-hash: ${{ steps.git-info.outputs.commit-hash }}
      base-name: ${{ steps.assemble-base-name.outputs.base-name }}
    steps:
      - uses: actions/checkout@v4
      - name: Get git info
        id: git-info
        shell: bash
        run: |
          COMMIT_HASH=$(git rev-parse --short ${{ GITHUB.SHA }})
          echo "commit-hash=$COMMIT_HASH" >> $GITHUB_OUTPUT
      - name: Assemble package base name
        id: assemble-base-name
        shell: bash
        run: |
          BASE_NAME=tauri-plugin-bluetooth_${{ steps.git-info.outputs.commit-hash }}_#${{ GITHUB.RUN_NUMBER }}
          echo "base-name=$BASE_NAME" >> $GITHUB_OUTPUT
  process-api:
    runs-on: ubuntu-latest
    needs: get-info
    env:
      OUTPUT_FOLDER: ./dist-js
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
      - name: Install Dependencies and Build
        run: |
          pnpm i
          pnpm build
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.get-info.outputs.base-name }}_Api
          path: ${{ env.OUTPUT_FOLDER }}
      - name: Publish to npm
        if: env.BUILD_TYPE == 'release'
        run: npm publish --access public

  process-crate:
    runs-on: ubuntu-latest
    needs: get-info
    env:
      OUTPUT_FOLDER: ./target
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Check package
        run: cargo clippy --all-targets --all-features
      - name: Assemble package
        run: cargo package
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.get-info.outputs.base-name }}_Crate
          path: ${{ env.OUTPUT_FOLDER }}
      - name: Publish to crates.io
        if: env.BUILD_TYPE == 'release'
        run: cargo publish --token ${{ secrets.CRATES_TOKEN }}
